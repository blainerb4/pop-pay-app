{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matthewharrison/Desktop/poplarclientapp/src/components/button.components.js\";\nimport React from 'react';\nimport './button.styles.css';\nconst STYLES = ['btn--primary', 'btn--outline']; //apply styles and colors so it doesnt mattee where it is we can update it without adding custom classes\n\nconst SIZES = ['btn--medium', 'btn--large', 'btn--mobile', 'btn--wide'];\nconst COLOR = ['primary', 'blue', 'red', 'green'];\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize,\n  buttonColor\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  const checkButtonColor = COLOR.includes(buttonColor) ? buttonColor : null;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn${checkButtonStyle} ${checkButtonSize} ${checkButtonColor}`,\n    onClick: onClick,\n    type: type,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/matthewharrison/Desktop/poplarclientapp/src/components/button.components.js"],"names":["React","STYLES","SIZES","COLOR","Button","children","type","onClick","buttonStyle","buttonSize","buttonColor","checkButtonStyle","includes","checkButtonSize","checkButtonColor"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,qBAAP;AAEA,MAAMC,MAAM,GAAG,CAAC,cAAD,EAAiB,cAAjB,CAAf,C,CAAiD;;AACjD,MAAMC,KAAK,GAAG,CAAC,aAAD,EAAgB,YAAhB,EAA8B,aAA9B,EAA6C,WAA7C,CAAd;AACA,MAAMC,KAAK,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,KAApB,EAA2B,OAA3B,CAAd;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,IAFmB;AAGnBC,EAAAA,OAHmB;AAInBC,EAAAA,WAJmB;AAKnBC,EAAAA,UALmB;AAMnBC,EAAAA;AANmB,CAAD,KAOhB;AACF,QAAMC,gBAAgB,GAAGV,MAAM,CAACW,QAAP,CAAgBJ,WAAhB,IACzBA,WADyB,GACXP,MAAM,CAAC,CAAD,CADpB;AAEA,QAAMY,eAAe,GAAGX,KAAK,CAACU,QAAN,CAAeH,UAAf,IACxBA,UADwB,GACXP,KAAK,CAAC,CAAD,CADlB;AAEA,QAAMY,gBAAgB,GAAGX,KAAK,CAACS,QAAN,CAAeF,WAAf,IACzBA,WADyB,GACX,IADd;AAEA,sBACI;AAAQ,IAAA,SAAS,EACf,MAAKC,gBAAiB,IAAGE,eAAgB,IAAGC,gBAAiB,EAD/D;AAEA,IAAA,OAAO,EAAEP,OAFT;AAEkB,IAAA,IAAI,EAAED,IAFxB;AAAA,cAGED;AAHF;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CApBM;KAAMD,M","sourcesContent":["import React from 'react';\n\nimport './button.styles.css'\n\nconst STYLES = ['btn--primary', 'btn--outline']; //apply styles and colors so it doesnt mattee where it is we can update it without adding custom classes\nconst SIZES = ['btn--medium', 'btn--large', 'btn--mobile', 'btn--wide'];\nconst COLOR = ['primary', 'blue', 'red', 'green'];\n\nexport const Button = ({\n    children, \n    type, \n    onClick, \n    buttonStyle, \n    buttonSize, \n    buttonColor\n}) => {\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? \n    buttonStyle : STYLES[0];\n    const checkButtonSize = SIZES.includes(buttonSize) ? \n    buttonSize : SIZES[0];\n    const checkButtonColor = COLOR.includes(buttonColor) ?\n    buttonColor : null;\n    return (\n        <button className=\n        {`btn${checkButtonStyle} ${checkButtonSize} ${checkButtonColor}`}\n        onClick={onClick} type={type}\n        >{children}</button>\n    )\n}"]},"metadata":{},"sourceType":"module"}